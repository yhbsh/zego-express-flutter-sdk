group 'im.zego.zego_express_engine'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 16
    }

    task downloadNativeDependency {
        def depsUrl = ""
        if (project.hasProperty('DEPS') && project.property('DEPS').startsWith('http')) {
            depsUrl = project.property('DEPS')
        } else {
            depsUrl = (file("$projectDir.absolutePath/../DEPS.yaml").text =~ /android:\s*(.*)/)[0][1]
        }

        def depsVer = depsUrl.tokenize('?')[1].tokenize('=')[1]

        def libsDir = file("$projectDir.absolutePath/libs")
        if (file("$libsDir/VERSION.txt").exists() &&
            file("$libsDir/ZegoExpressEngine.jar").exists()) {
            def version = file("$libsDir/VERSION.txt").readLines().first().trim()
            if (version == depsVer) {
                return
            } else {
            }
        }
        delete libsDir
        libsDir.mkdir()
        ant.get(src: depsUrl, dest: "$libsDir/sdk.zip")
        ant.unzip(src: "$libsDir/sdk.zip", dest: libsDir)
        ant.move(file: "$libsDir/release/Library/armeabi-v7a", todir: libsDir, overwrite: true, failonerror: false)
        ant.move(file: "$libsDir/release/Library/arm64-v8a", todir: libsDir, overwrite: true, failonerror: false)
        ant.move(file: "$libsDir/release/Library/x86", todir: libsDir, overwrite: true, failonerror: false)
        ant.move(file: "$libsDir/release/Library/x86_64", todir: libsDir, overwrite: true, failonerror: false)
        ant.move(file: "$libsDir/release/Library/ZegoExpressEngine.jar", todir: libsDir, overwrite: true)
        ant.move(file: "$libsDir/release/VERSION.txt", todir: libsDir, overwrite: true)
        delete "$libsDir/release"
        delete "$libsDir/sdk.zip"
    }

    tasks.withType(JavaCompile) {
        preBuild.dependsOn 'downloadNativeDependency'
    }

    sourceSets {
        main {
            jniLibs {
                srcDirs = ['libs']
            }
        }
    }
}

dependencies {
    // for other module visit
    api fileTree(dir: 'libs', include: ['*.jar'])
}
